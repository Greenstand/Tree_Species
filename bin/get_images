#!/bin/gawk -f 

BEGIN{

  # Set defaults and load args
  read_args()

  # test for downloaded file
  cmd = "test -f downloaded ; echo $?"
  cmd | getline downloaded_exists
  close(cmd)
  if (!downloaded_exists)
    while ((getline < "downloaded") > 0)
      already[$1]++
  
  x = START
  FS="|"
  while ((getline < FILE) > 0) {
    i++
    uuid = gensub(                                                      \
     /.*_([a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12})_.*$/, \
     "\\1","G",$1)
    if ((i >= START) && (n < MAX) && (i == x)) {
      if (already[uuid]) {
        print i ": already downloaded, skipping..."
      }
      else {
        # first time to get size
        cmd = "curl -s -I " $1 " | grep -E '[Cc]ontent-[Ll]ength'"
        cmd | getline size
        close(cmd)
        split(size, s, / +/)
        print i ": size: " s[2] 
        if (s[2] >= MINSIZE) {
          n++
          print "  fetching... (" n ")"
          if (PREFIXCOL)
            PREFIX = $PREFIXCOL "_"
          if (!STAMPCOL)
            system("curl -s -L " $1 " > '" PREFIX   \
                   gensub(/^.*\//,"","G",$1)"'")
          else {
            # test
            if (NF < STAMPCOL) {
              print "Error: no stamp column" > "/dev/stderr"
              exit 1
            }
            system("curl -s -L " $1 " > _tmpimg")
            cmd = "file _tmpimg | sed -E "\
              "'s/^.*([0-9][0-9][0-9])x[0-9][0-9][0-9].*$/\\1/g'"
            cmd | getline width
            close(cmd)
            if (!width)
              width = 480
            system("convert _tmpimg -auto-orient -font helvetica -pointsize " \
                   int(width * 0.05) \
                   " -fill blue -gravity SouthEast -draw \"text 60,60 '" \
                   substr($STAMPCOL, 1, 20) "'\" " PREFIX               \
                   gensub(/^.*\//,"","G",$1) )
            system("rm -f _tmpimg")
          }

          if (FILEBY) {
            if (!dirmade[$FILEBY]) {
              system("mkdir '" $FILEBY "'")
              dirmade[$FILEBY] = 1
            }
            system("mv '" PREFIX gensub(/^.*\//,"","G",$1) "' '" $FILEBY "'")
          }
            
          print uuid >> "downloaded"
          close("downloaded")
        }
      }
      # next one
      x = i + STEP
    }
  }
}

function read_args(    arg) {
  # Read arguments, check, give usage. Long args to avoid Gawk clash

  # Defaults
  FILE = PREFIX = STAMP = ""
  START = STEP = 1
  MAX = 100
  MINSIZE = 100000
  
  for (arg = 1; arg < ARGC; arg++) {
    if      (ARGV[arg] == "--trees"    ) FILE      = ARGV[arg+1]
    else if (ARGV[arg] == "--start"   ) START     = ARGV[arg+1]
    else if (ARGV[arg] == "--step"    ) STEP      = ARGV[arg+1]
    else if (ARGV[arg] == "--max"     ) MAX       = ARGV[arg+1]
    else if (ARGV[arg] == "--prefix"  ) PREFIX    = ARGV[arg+1] "_"
    else if (ARGV[arg] == "--prefixf" ) PREFIXCOL = ARGV[arg+1]
    else if (ARGV[arg] == "--stamp"   ) STAMPCOL  = ARGV[arg+1]
    else if (ARGV[arg] == "--fileby"  ) FILEBY    = ARGV[arg+1]
    else if (ARGV[arg] == "--minsize" ) MINSIZE   = ARGV[arg+1]
  }

  if (!FILE) {
    print"Usage: get_images --trees  <file>           \\\n"    \
      "               [  --start   <sampling_start> \\\n"      \
      "                  --step    <sampling_step>  \\\n"      \
      "                  --max     <max_images>     \\\n"      \
      "                  --prefix  <prefix>         \\\n"      \
      "                  --prefixf <prefix_column>  \\\n"      \
      "                  --stamp   <stamp_column>   \\\n"      \
      "                  --fileby  <file_column>   \\\n"      \
      "                  --minsize <min_image_size> ]"
    exit 1
  }
}
